@using Microsoft.EntityFrameworkCore
@using MrCMS.Data
@using MrCMS.Entities.People
@using MrCMS.Helpers
@using MrCMS.Services
@using MrCMS.Web.Apps.Articles.Entities
@model MrCMS.Entities.People.User
@inject IGlobalRepository<User> Repository
@{
    //todo refactor this
    var authorInfo = (await Repository.Query().Include(x=>x.UserProfileData).Where(x=>x.Id == Model.Id).FirstOrDefaultAsync()).Get<AuthorInfo>();
}
<fieldset>
    <legend>
        Author Info
        <span class="btn-group display-inline pull-right">
            @(authorInfo == null ? Html.ActionLink("Add", "Add", "AuthorInfo", new { id = Model.Id }, new { @class = "btn btn-default", data_toggle = "fb-modal" }) : Html.ActionLink("Edit", "Edit", "AuthorInfo", new { id = authorInfo.Id }, new { @class = "btn btn-default", data_toggle = "fb-modal" }))
        </span>
    </legend>

    @if (authorInfo != null)
    {
        <h6>Bio</h6>
        @Html.Raw(authorInfo.Bio)
    }
</fieldset>
