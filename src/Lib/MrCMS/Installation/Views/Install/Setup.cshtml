@using MrCMS.Helpers
@using MrCMS.Installation
@using MrCMS.Installation.Models
@model InstallModel
@{
    ViewBag.Title = "MrCMS Installation";
    var installationResult = TempData.Get<InstallationResult>();
    var providerTypes = ViewData["provider-types"] as List<DatabaseProviderInfo> ?? new List<DatabaseProviderInfo>();
    Layout = "~/Installation/Views/Install/_Layout.cshtml";
}
@using (Html.BeginForm("Setup", "Install", FormMethod.Post, new { id = "installationform" }))
{
    if (installationResult != null)
    {
        if (installationResult.Errors.Any())
        {
            <div class="alert alert-danger">
                <strong>Sorry there was a problem installing - please see errors below</strong>
                <ul>
                    @{
                        foreach (var error in installationResult.Errors)
                        {
                            <li>@error</li>
                        }
                    }
                </ul>
            </div>
        }
    }
    <div class="row">
        <div class="col-lg-8 col-lg-offset-2">
            <fieldset>
                <h4>Site Information</h4>
                <hr class="small-margin" />

                <div class="form-group">
                    @Html.LabelFor(x => x.SiteName)
                    @Html.TextBoxFor(x => x.SiteName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.SiteName)
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.SiteUrl)
                    @Html.TextBoxFor(x => x.SiteUrl, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.SiteUrl)
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.AdminEmail)
                    @Html.TextBoxFor(x => x.AdminEmail, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.AdminEmail)
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.AdminPassword)
                    @Html.PasswordFor(x => x.AdminPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.AdminPassword)
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.ConfirmPassword)
                    @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.ConfirmPassword)
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.UiCulture)
                    @Html.DropDownListFor(x => x.UiCulture, Model.CultureOptions, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.UiCulture)
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.TimeZone)
                    @Html.DropDownListFor(x => x.TimeZone, Model.TimeZoneOptions, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.TimeZone)
                </div>

            </fieldset>
        </div>
    </div>
    <hr />

    <div class="text-right">
        <input type="submit" value="Install" class="btn btn-lg btn-primary" />
    </div>

}
